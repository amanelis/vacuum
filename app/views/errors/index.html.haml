.row
  .large-12.columns
    - if @errors.empty?
      .panel
        %h3 No errors yet. Guess thats a good thing?
      %p
        Add this snippet directly after the
        %code= "<head>"
        tag in your application and before any other javascript code/dependencies are loaded. The code in this script will only ever be initiated
        on an error. Therefore you are only just loading in the size of the script. When an error is triggered, this code will run.
        %br
        %br
        Never change/edit or try to minify this piece of code. For we use the
        %code _vacuum
        object amongst your application and in our listener.
        %br
        %textarea{:cols => "50", :rows => "4", :id => 'codebox'}
          = @project.to_js
    - else
      .right
        %button.button.round.small.action-on-selected{:href => "#", disabled: true, data: {action: group_resolve_project_errors_path(@project)}}
          %i.icon-ok
          Resolve Selected
        %a.button.round.small{:href => "#", data: {dropdown: 'config-dropdown'}}
          %i.icon-cog.icon-big
        %ul#config-dropdown.f-dropdown{data: {dropdown_content: true}}
          %li
            %a{href: project_path(@project, anchor: 'setup') } Setup
          %li
            %a{href: project_path(@project, anchor: 'notifications') } Notifications
          %li
            %a{href: project_path(@project, anchor: 'collaborators') } Collaborators
          %li
            %a{href: project_path(@project, anchor: 'settings') } Settings
          %li.divider
          %li
            = link_to project_path(@project), :method => :delete, :confirm => "Are you sure you want to delete this project?" do
              %i.icon-ban-circle
              Delete project
      %h2.left
        = "#{@project.name}"
      %form#error-form{name: 'error-form', method: 'post'}
        %table.table.twelve
          %thead
            %tr
              %th
                %input#check-all{type: 'checkbox'}
              %th Level
              %th Agent
              %th Error
              %th Occurrences
              %th Last Error
          %tbody
            - @errors.each do |error|
              %tr
                %td
                  %input.error-checkbox{type: 'checkbox', name: 'error_ids[]', value: error.id}
                %td
                  - if error.level == 'system' || error.level == 'window'
                    %span{class: 'label radius'}= error.level
                  - elsif error.level == 'error'
                    %span{class: 'alert label radius'}= error.level
                  - elsif error.level == 'warn'
                    %span{class: 'warn label radius'}= error.level
                  - else
                    = error.level
                %td= image_tag "/assets/#{error.occurrences.collect(&:human_agent).uniq.first}.png", width: '16px', height: '16px'
                %td
                  %a{href: project_error_path(@project, error)}= error.message
                  %br
                  %em= error.occurrences.last.try(:file) + ':' + error.occurrences.last.try(:line)  unless error.occurrences.last.try(:line).nil?
                %td= error.occurrences.count
                %td= time_ago_in_words(error.updated_at)
.row
  .large-6.columns
    %a.button.round.small.left{href: projects_path} < Back
  .large-6.columns
    %div{align: 'right'}
      = will_paginate(@errors)
